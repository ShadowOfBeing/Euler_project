n1 = [1, 2, 5, 10, 20]


def sum_of_coins(x):  # x - искомая сумма в списке
    i = 0  # индекс для исходного списка
    z = 0  # счётчик
    s = [1]
    # задаём бесконечный цикл, крайний случай (по достижении которого осуществится выход из цикла)
    # находится внутри тела цикла
    while len(s) > 0:
        # крайний случай
        if s[0] == s[-1] == n1[-1] and sum(s) >= x:
            if sum(s) == x:
                z += 1
            break
        # пока сумма меньше x добавляем в список s единички (n1[0])
        while sum(s) < x:
            s.append(n1[0])
        # по достижении суммы x в списке s увеличиваем счётчик на 1
        if sum(s) == x:
            z += 1
        # если сумма больше чем x, то идя с конца списка ищем первый элемент, который меньше соседнего
        # слева и найденный элемент заменяем на следующий по индексу элемент в списке n1. Затем удаляем все
        # элементы в списке s, находящиеся справа от заменённого элемента.
        if sum(s) > x:
            j = -1
            while s[j] == s[j-1]:
                j -= 1
            j += len(s)
            s.insert(j, n1[n1.index(s[j]) + 1])
            del s[j + 1:]
            if sum(s) == x:
                z += 1
        # если список s заполнен одинаковыми элементами и сумма равна x, тогда обнуляем список и кладём
        # в него следующий по индексу элемент из списка n1
        if sum(s) == x and s[0] == s[-1]:
            if s[0] == n1[-1]:
                break
            i += 1
            s = [n1[i]]
        # сюда мы попадаем, если первый и последний элементы списка s не равны, т.е. s[-1] < s[0]
        # и сумма равна x
        if sum(s) == x:
            j = -1
            while s[j] == s[j - 1]:
                j -= 1
            j += len(s)
            s.insert(j, n1[n1.index(s[j]) + 1])
            del s[j + 1:]
    print(z)

# решил сам
